// VelocityDash SCSS Functions
// Utility functions for calculations and transformations

// Convert px to rem
@function rem($pixels, $base: 16) {
  @return #{$pixels / $base}rem;
}

// Convert px to em
@function em($pixels, $base: 16) {
  @return #{$pixels / $base}em;
}

// Calculate percentage
@function percentage($value, $total) {
  @return percentage($value / $total);
}

// Get color with opacity
@function rgba-color($color, $opacity: 1) {
  @return rgba($color, $opacity);
}

// Calculate contrast ratio
@function contrast-ratio($color1, $color2) {
  $l1: luminance($color1);
  $l2: luminance($color2);
  
  @if $l1 > $l2 {
    @return ($l1 + 0.05) / ($l2 + 0.05);
  } @else {
    @return ($l2 + 0.05) / ($l1 + 0.05);
  }
}

// Calculate luminance
@function luminance($color) {
  $red: red($color) / 255;
  $green: green($color) / 255;
  $blue: blue($color) / 255;
  
  $red: if($red <= 0.03928, $red / 12.92, pow(($red + 0.055) / 1.055, 2.4));
  $green: if($green <= 0.03928, $green / 12.92, pow(($green + 0.055) / 1.055, 2.4));
  $blue: if($blue <= 0.03928, $blue / 12.92, pow(($blue + 0.055) / 1.055, 2.4));
  
  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;
}

// Power function
@function pow($number, $exponent) {
  $value: 1;
  
  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  } @else if $exponent < 0 {
    @for $i from 1 through -$exponent {
      $value: $value / $number;
    }
  }
  
  @return $value;
}

// Get z-index value
@function z($layer) {
  @return map-get($z-layers, $layer);
}

// Map for z-index layers
$z-layers: (
  'dropdown': 1000,
  'sticky': 1020,
  'fixed': 1030,
  'modal-backdrop': 1040,
  'modal': 1050,
  'popover': 1060,
  'tooltip': 1070
);
